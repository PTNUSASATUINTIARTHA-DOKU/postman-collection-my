{
	"info": {
		"_postman_id": "3deb2638-ea5a-48ee-97eb-380bc8d173d6",
		"name": "DOKU MY API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42079928"
	},
	"item": [
		{
			"name": "DOKU Direct",
			"item": [
				{
					"name": "Cards",
					"item": [
						{
							"name": "Payment Form",
							"item": [
								{
									"name": "Request Payment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uuid = require('uuid');",
													"pm.variables.set(\"request_id\", uuid.v4());",
													"pm.variables.set(\"request_timestamp\", new Date().toISOString().slice(0, 19)+\"Z\");",
													"",
													"function generateSignature(jsonBody) {",
													"    var digestSHA256 = CryptoJS.SHA256(CryptoJS.enc.Utf8.parse(jsonBody));",
													"    var digestBase64 = CryptoJS.enc.Base64.stringify(digestSHA256);",
													"    console.log('Digest Component: ' + jsonBody)",
													"    console.log('Digest sha256: ' + digestSHA256)",
													"    console.log('Digest: ' + digestBase64)",
													"    var signatureComponents = 'Client-Id:' + pm.variables.get('client_id') +'\\n'+",
													"    'Request-Id:' + pm.variables.get('request_id') +'\\n'+",
													"    'Request-Timestamp:' + pm.variables.get('request_timestamp') + '\\n'+",
													"    'Request-Target:/credit-card/v1/payment-page' + '\\n'+",
													"    'Digest:' + digestBase64;",
													"    var signatureHmacSha256 = CryptoJS.HmacSHA256(signatureComponents,pm.variables.get('secret_key'));",
													"    var signatureBase64 = CryptoJS.enc.Base64.stringify(signatureHmacSha256);",
													"    console.log('Signature Components: ' + signatureComponents)",
													"    console.log('Signature HMACSHA256: ' + signatureHmacSha256)",
													"    console.log('Signature: ' + signatureBase64)",
													"    return 'HMACSHA256='+signatureBase64;",
													"}",
													"",
													"pm.variables.set('signature', generateSignature(pm.variables.replaceIn(pm.request.body.raw)));"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Client-Id",
												"value": "{{client_id}}",
												"type": "text"
											},
											{
												"key": "Request-Id",
												"value": "{{request_id}}",
												"type": "text"
											},
											{
												"key": "Request-Timestamp",
												"value": "{{request_timestamp}}",
												"type": "text"
											},
											{
												"key": "Signature",
												"value": "{{signature}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \n    \"order\": {\n       \t\"invoice_number\":\"INV-{{$timestamp}}\",\n       \t\"amount\": 4.5,\n       \t\"callback_url\": \"https://doku.com\",\n       \t\"auto_redirect\": false,\n        \"currency\": \"MYR\"\n    },\n    \"customer\": {\n    \t\"id\":\"DOKUMY-01\",\n    \t\"name\":\"Anton Budiman\",\n    \t\"email\":\"anton@doku.com\",\n    \t\"phone\":\"+6281287458232\"\n\t}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/credit-card/v1/payment-page",
											"host": [
												"{{url}}"
											],
											"path": [
												"credit-card",
												"v1",
												"payment-page"
											]
										},
										"description": "| Header Parameter | Type | Description |\n| --- | --- | --- |\n| Client-Id | `string` | The Client ID you retrieved from Jokul Back Office<br>`MANDATORY` |\n| Request-Id | `string` | Random string that must unique per request for idempotency<br>`MANDATORY` `ALPHA NUMERIC` `40 chars` |\n| Request-Timestamp | `string` | Request time in ISO8601 format with UTC + 0<br>`MANDATORY` |\n| Signature | `string` | Security parameter to ensure the request's authenticity. Learn more how to generate Signature [here](https://jokul.doku.com/docs/docs/technical-references/generate-signature)<br>`MANDATORY`|"
									},
									"response": []
								}
							]
						},
						{
							"name": "Host-to-host Payment",
							"item": [
								{
									"name": "Charge Payment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uuid = require('uuid');",
													"pm.variables.set(\"request_id\", uuid.v4());",
													"pm.variables.set(\"request_timestamp\", new Date().toISOString().slice(0, 19)+\"Z\");",
													"",
													"function generateSignature(jsonBody) {",
													"    var digestSHA256 = CryptoJS.SHA256(CryptoJS.enc.Utf8.parse(jsonBody));",
													"    var digestBase64 = CryptoJS.enc.Base64.stringify(digestSHA256);",
													"    console.log('Digest Component: ' + jsonBody)",
													"    console.log('Digest sha256: ' + digestSHA256)",
													"    console.log('Digest: ' + digestBase64)",
													"    var signatureComponents = 'Client-Id:' + pm.variables.get('client_id') +'\\n'+",
													"    'Request-Id:' + pm.variables.get('request_id') +'\\n'+",
													"    'Request-Timestamp:' + pm.variables.get('request_timestamp') + '\\n'+",
													"    'Request-Target:/credit-card/charge' + '\\n'+",
													"    'Digest:' + digestBase64;",
													"    var signatureHmacSha256 = CryptoJS.HmacSHA256(signatureComponents,pm.variables.get('secret_key'));",
													"    var signatureBase64 = CryptoJS.enc.Base64.stringify(signatureHmacSha256);",
													"    console.log('Signature Components: ' + signatureComponents)",
													"    console.log('Signature HMACSHA256: ' + signatureHmacSha256)",
													"    console.log('Signature: ' + signatureBase64)",
													"    return 'HMACSHA256='+signatureBase64;",
													"}",
													"",
													"pm.variables.set('signature', generateSignature(pm.variables.replaceIn(pm.request.body.raw)));"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Request-Timestamp",
												"value": "{{request_timestamp}}",
												"description": "(Required) Timestamp request on UTC time in ISO8601 UTC+0 format format"
											},
											{
												"key": "Signature",
												"value": "{{signature}}",
												"description": "(Required) HMACSHA256 from signature components"
											},
											{
												"key": "Client-Id",
												"value": "{{client_id}}",
												"description": "(Required) Unique ID for a partner (DOKU'S Client ID)"
											},
											{
												"key": "Request-Id",
												"value": "{{request_id}}",
												"description": "(Required) Numeric String. Reference number that should be unique in the same day (request-id)"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"order\": {\n        \"invoice_number\": \"INV-{{$timestamp}}\",\n        \"amount\": 5,\n        \"descriptor\": \"BIILING-INV-0001\",\n        \"currency\": \"MYR\"\n    },\n    \"customer\": {\n        \"id\": \"DOKUMY-02\"\n    },\n    \"payment\": {\n        \"type\": \"MOTO\"\n    },\n    \"card\": {\n        \"token\": \"b3bb0cd4f02dc6a698074cc365d288d7\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/credit-card/charge",
											"host": [
												"{{url}}"
											],
											"path": [
												"credit-card",
												"charge"
											]
										},
										"description": "Environment\nSandbox - https://api-sandbox.doku.com\nProduction - https://api.doku.com"
									},
									"response": []
								}
							]
						},
						{
							"name": "After Payment",
							"item": [
								{
									"name": "Request Refund",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uuid = require('uuid');",
													"pm.variables.set(\"request_id\", uuid.v4());",
													"pm.variables.set(\"request_timestamp\", new Date().toISOString().slice(0, 19)+\"Z\");",
													"",
													"function generateSignature(jsonBody) {",
													"    var digestSHA256 = CryptoJS.SHA256(CryptoJS.enc.Utf8.parse(jsonBody));",
													"    var digestBase64 = CryptoJS.enc.Base64.stringify(digestSHA256);",
													"    console.log('Digest Component: ' + jsonBody)",
													"    console.log('Digest sha256: ' + digestSHA256)",
													"    console.log('Digest: ' + digestBase64)",
													"    var signatureComponents = 'Client-Id:' + pm.variables.get('client_id') +'\\n'+",
													"    'Request-Id:' + pm.variables.get('request_id') +'\\n'+",
													"    'Request-Timestamp:' + pm.variables.get('request_timestamp') + '\\n'+",
													"    'Request-Target:/cancellation/credit-card/refund' + '\\n'+",
													"    'Digest:' + digestBase64;",
													"    var signatureHmacSha256 = CryptoJS.HmacSHA256(signatureComponents,pm.variables.get('secret_key'));",
													"    var signatureBase64 = CryptoJS.enc.Base64.stringify(signatureHmacSha256);",
													"    console.log('Signature Components: ' + signatureComponents)",
													"    console.log('Signature HMACSHA256: ' + signatureHmacSha256)",
													"    console.log('Signature: ' + signatureBase64)",
													"    return 'HMACSHA256='+signatureBase64;",
													"}",
													"",
													"pm.variables.set('signature', generateSignature(pm.variables.replaceIn(pm.request.body.raw)));"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Client-Id",
												"value": "{{client_id}}",
												"type": "text"
											},
											{
												"key": "Request-Id",
												"value": "{{request_id}}",
												"type": "text"
											},
											{
												"key": "Request-Timestamp",
												"value": "{{request_timestamp}}",
												"type": "text"
											},
											{
												"key": "Signature",
												"value": "{{signature}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"order\": {\n        \"invoice_number\": \"INV-1757388506\"\n    },\n    \"payment\": {\n        \"original_request_id\": \"0c3fc38f-7e0a-48c5-9ee6-e539e8f29c74\"\n    },\n    \"refund\": {\n        \"amount\": 4.5\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/cancellation/credit-card/refund",
											"host": [
												"{{url}}"
											],
											"path": [
												"cancellation",
												"credit-card",
												"refund"
											]
										},
										"description": "| Header Parameter | Type | Description |\n| --- | --- | --- |\n| Client-Id | `string` | The Client ID you retrieved from Jokul Back Office<br>`MANDATORY` |\n| Request-Id | `string` | Random string that must unique per request for idempotency<br>`MANDATORY` `ALPHA NUMERIC` `40 chars` |\n| Request-Timestamp | `string` | Request time in ISO8601 format with UTC + 0<br>`MANDATORY` |\n| Signature | `string` | Security parameter to ensure the request's authenticity. Learn more how to generate Signature [here](https://jokul.doku.com/docs/docs/technical-references/generate-signature)<br>`MANDATORY`|"
									},
									"response": []
								},
								{
									"name": "Unbind Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var key = \"bf4728e4f9b50e0abc91a96bcf8361bb\";",
													"var client_id = \"BRN-TEST-0000000001\";",
													"var req_id = _.random(1, 100000);",
													"var dateFormat =  new Date().toISOString().slice(0, 19)+\"Z\";",
													"var targetPath = \"/tokenization/v2/delete-token\";",
													"",
													"function generatePayCodeSignature(jsonBody, key, client, req, tgl, target) {",
													"    var body = (jsonBody.raw);",
													"    var bodySha256 = CryptoJS.enc.Base64.stringify(CryptoJS.SHA256(body));",
													"    var signatureComponents = ",
													"        \"Client-Id:\"+client+\"\\n\"",
													"        +\"Request-Id:\"+req+\"\\n\"",
													"        +\"Request-Timestamp:\"+tgl+\"\\n\"",
													"        +\"Request-Target:\"+target+\"\\n\"",
													"        +\"Digest:\"+ bodySha256;",
													"    var signature = CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(signatureComponents,key));",
													"        console.log('body : \\n' + body);",
													"        console.log('Digest : '+ bodySha256);",
													"        console.log('UTC : ' +tgl);",
													"        console.log('Komponen signature : \\n' + signatureComponents);",
													"        console.log('Signature : ' + signature);",
													"    return (signature);",
													"}",
													"var Header = require('postman-collection').Header",
													"pm.request.headers.add({key : 'Signature', value :\"HMACSHA256=\"+generatePayCodeSignature(pm.request.body, key, client_id, req_id, dateFormat, targetPath)});",
													"pm.request.headers.add({key : 'Request-Id', value : req_id});",
													"pm.request.headers.add({key : 'Client-Id', value : client_id});",
													"pm.request.headers.add({key : 'Request-Timestamp', value : dateFormat});",
													"pm.request.headers.add({key: 'Request-Target', value: targetPath });",
													"",
													"// var apiKey= \"QM0YDGG51P3QFZND9QJX21TnyinPsxIKWAzemwXuSmutBV1HI\";",
													"// var secretKey = \"ss#5GT}bqgwj9}SVase@gBUUrgd8f{tzMPeaSWcH\";",
													"// console.log(\"apiKey \" + apiKey);",
													"// console.log(\"secretKey \" + secretKey);",
													"// var vProvId=postman.getGlobalVariable('vProvisionedTokenID');",
													"// var URI= \"vts/provisionedTokens/\"+vProvId+\"/delete\";",
													"// console.log(URI);",
													"// var qP1 = 'apikey=' + apiKey;",
													"// var qP2 = \"&relationshipID=DokuExtID1\"",
													"// var timeInSeconds = parseInt((new Date()).getTime() / 1000);",
													"// console.log(\"timeInSeconds \" + timeInSeconds);",
													"// var request=JSON.parse(JSON.stringify(request.data));",
													"// var beforeHash = timeInSeconds + URI + qP1 + qP2 + request;",
													"// var hash = CryptoJS.HmacSHA256(beforeHash, secretKey);",
													"// var hashInBase64 = CryptoJS.enc.Hex.stringify(hash);",
													"// hashInBase64=\"xv2:\" + timeInSeconds + \":\" + hashInBase64;",
													"// console.log(\"hashInBase64 \" + hashInBase64);",
													"// postman.setGlobalVariable(\"xpayToken\", hashInBase64);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-pay-token",
												"value": "{{xpayToken}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-request-id",
												"value": "100",
												"type": "text",
												"disabled": true
											},
											{
												"key": "platformType",
												"value": "WEB",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": {\n        \"id\": \"9d5d19f0fba2306c161618e81526bd64\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/tokenization/v2/delete-token",
											"host": [
												"{{url}}"
											],
											"path": [
												"tokenization",
												"v2",
												"delete-token"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"description": "DOKU Direct is a collection of REST APIs for customizing your payment flow"
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "Check Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');",
									"pm.variables.set(\"request_id\", uuid.v4());",
									"pm.variables.set(\"request_timestamp\", new Date().toISOString().slice(0, 19)+\"Z\");",
									"",
									"function generateSignature() {",
									"    var invoiceNumber = '0c3fc38f-7e0a-48c5-9ee6-e539e8f29c74'; // Replace this with the Invoice Number or Request-Id as the query params",
									"",
									"    var signatureComponents = 'Client-Id:' + pm.variables.get('client_id') +'\\n'+",
									"    'Request-Id:' + pm.variables.get('request_id') +'\\n'+",
									"    'Request-Timestamp:' + pm.variables.get('request_timestamp') + '\\n'+",
									"    'Request-Target:' + '/orders/v1/status/' + invoiceNumber",
									"    var signatureHmacSha256 = CryptoJS.HmacSHA256(signatureComponents,pm.variables.get('secret_key'));",
									"    var signatureBase64 = CryptoJS.enc.Base64.stringify(signatureHmacSha256);",
									"    console.log('Signature Components: ' + signatureComponents)",
									"    console.log('Signature HMACSHA256: ' + signatureHmacSha256)",
									"    console.log('Signature: ' + signatureBase64)",
									"    return 'HMACSHA256='+signatureBase64;",
									"}",
									"",
									"pm.variables.set('signature', generateSignature());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Client-Id",
								"value": "{{client_id}}",
								"type": "text"
							},
							{
								"key": "Request-Id",
								"value": "{{request_id}}",
								"type": "text"
							},
							{
								"key": "Request-Timestamp",
								"value": "{{request_timestamp}}",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "{{signature}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/orders/v1/status/0c3fc38f-7e0a-48c5-9ee6-e539e8f29c74",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								"v1",
								"status",
								"0c3fc38f-7e0a-48c5-9ee6-e539e8f29c74"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://api-sandbox.doku.com"
		},
		{
			"key": "prod_url",
			"value": "https://api.doku.com"
		},
		{
			"key": "client_id",
			"value": "MCH-0003-8279340109246"
		},
		{
			"key": "secret_key",
			"value": "SK-7D9Lk82lxvJ2tPn18d4t"
		}
	]
}
